version: "3"
services:
    frontend:
        container_name: client
        build:
            context: ./client
            dockerfile: Dockerfile
        image: kunwalle/client
        restart: always
        volumes:
            - ./client:/usr/src/app
        ports: 
            - "3000:3000"
        expose: 
            - "3000"
        # environment: 
        #     - VIRTUAL_HOST=dashboard.khang.test
        #     - VIRTUAL_PORT=8080
        # expose: 
        #     - 80
        # expose: 
        #     -
        # labels: 
        #     - "virtual.host=khang.test"
        #     - "virtual.port=8080"
        #     - "virtual.tls-email=/root/certs/khang.test.pem /root/certs/khang.test-key.pem"
    backend:
        container_name: server
        build:
            context: ./server
            dockerfile: Dockerfile
        image: kunwalle/server
        volumes:
            - ./server:/usr/src/app
        ports: 
            - "5000:5000"
        expose: 
            - "5000"
        # environment: 
        #     - VIRTUAL_HOST=api.khang.test
        #     - VIRTUAL_PORT=8080
    wp:
        build: 
            context: ./wordpress
            dockerfile: Dockerfile
        image: kunwalle/wordpress
        environment:
            - WORDPRESS_DB_PASSWORD: qwerty
            # - VIRTUAL_HOST=khang.test
        image: "mysql:5.7"
        environment:
            MYSQL_ROOT_PASSWORD: qwerty
        volumes: 
            - ./wordpress
    # test-client:
    #     container_name: test-client
    #     build:
    #         context: ./client
    #         dockerfile: Dockerfile
    #     volumes:
    #         - ./test:/usr/src/app
    #     command: npm run test

    # nginx:
    #     image: jwilder/nginx-proxy
    #     container_name: nginx-proxy
    #     ports:
    #         - '80:80'
    #         - '433:433'
    #     volumes:
    #         - ./nginx-conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    #         - ./certs:/etc/nginx/certs
    
    nginx:
        image: nginx:alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx-conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            - ./cert/:/etc/nginx/certs


 

